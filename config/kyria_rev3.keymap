/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp TAB   &kp Q &kp W &kp E &kp R &kp T                                           &kp Y &kp U  &kp I     &kp O   &kp P    &kp GRAVE
            &kp LSHFT &kp A &kp S &kp D &kp F &kp G                                           &kp H &kp J  &kp K     &kp L   &kp BSLH  &kp RBKT
            &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp NUBS &kp ESC         &mo 5  &kp EQUAL &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                            &mo 3 &kp LALT &kp LCMD &kp SPACE &mo 2           &mo 1  &kp RET &kp BSPC &kp RALT &mo 4
            >;

        };
        nav_and_umlaut_layer {
            bindings = <
            &kp ESC  &trans &trans &trans &trans &trans                                    &trans &kp LBKT  &trans   &kp SEMI  &trans   &kp BSLH
            &trans   &kp SQT  &kp MINUS &trans &trans &trans                               &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans &trans
            &trans   &trans &trans &trans &trans &trans &trans &trans      &trans  &trans  &kp HOME &kp INSERT &kp DELETE &kp END  &trans &trans
                                  &trans &trans &trans &trans &trans        &trans  &trans  &trans &trans &trans
            >;
        };
        func_and_numbers_layer {
            bindings = <
            &trans &trans &kp F1 &kp F2 &kp F3 &kp F4                                     &trans &kp N7 &kp N8 &kp N9 &trans &trans
            &trans &trans &kp F5 &kp F6 &kp F7 &kp F8                                     &trans &kp N4 &kp N5 &kp N6 &trans &trans
            &trans &trans &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans    &trans &trans  &kp N0 &kp N1 &kp N2 &kp N3 &trans &trans
                                 &trans &trans &trans &trans &trans        &trans &trans &trans &trans &trans
            >;

        };
        osx_layer {
            bindings = <
            &trans &trans &trans &trans &trans &trans                                      &kp LS(N8) &kp LS(N9)  &kp LA(LS(N7))  &trans &trans &trans
            &trans &trans &trans &trans &trans &trans                                      &kp LA(N5) &kp LA(N6)  &kp LA(N)  &trans &trans &trans
            &trans &trans &trans &trans &trans &trans &trans &trans       &trans  &kp LA(L) &kp LA(N8) &kp LA(N9)  &kp LA(N7) &trans &trans &trans
                                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
            >;
        };
        windows_layer {
            bindings = <
            &trans &trans &trans &kp RA(MINUS) &kp LS(N8) &kp LS(N9)                                &trans &trans &trans &trans &trans &trans 
            &trans &trans &trans &kp RA(RBKT) &kp RA(N8) &kp RA(N9)                                   &trans &trans &trans &trans &trans &trans 
            &trans &trans &trans &kp RA(NUBS) &kp RA(N7) &kp RA(N0) &kp RA(Q) &trans     &trans &trans &trans &trans &trans &trans &trans &trans 
                                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
            >;
        };
        tools_layer {
            bindings = <
            &trans &trans &mkp MB1 &mkp MB3 &mkp MB2 &trans                                &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR 
            &trans &trans &trans &trans &trans &trans                                &trans &trans &trans &trans &trans &trans 
            &trans &trans &trans &trans &trans &trans  &trans &trans      &trans &trans &out OUT_BLE &out OUT_USB &trans &trans &trans &trans 
                                &trans &trans &trans &trans &trans         &trans &trans &trans &trans &trans
            >;
        };
    };
};
